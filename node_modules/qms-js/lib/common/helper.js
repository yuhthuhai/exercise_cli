"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Helper = /** @class */ (function () {
    function Helper() {
    }
    Helper.guid = function () {
        function s4() {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    };
    Helper.sleep = function (seconds) {
        return new Promise(function (resolve) {
            setTimeout(resolve, seconds * 1000);
        });
    };
    Helper.now = function (days) {
        var date = new Date();
        date.setDate(date.getDate() + days);
        return date;
    };
    Helper.formUrlEncoded = function (x) {
        return Object.keys(x).reduce(function (p, c) { return p + ("&" + c + "=" + encodeURIComponent(x[c])); }, '');
    };
    Helper.jsonToForm = function (body) {
        if (!body)
            return '';
        return Helper.formUrlEncoded(body);
    };
    Helper.random = function (len) {
        if (len === void 0) { len = 12; }
        var result = '';
        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var charactersLength = characters.length;
        for (var i = 0; i < len; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
    };
    Helper.random48 = function () {
        return Helper.random(48);
    };
    Helper.randomNumber = function (min, max) {
        return Math.floor(Math.random() * (max - min)) + min;
    };
    /**
     * Before posting data to api. we will try to remove undefined/null properties
     * because
     * @param data any
     */
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    Helper.removeInvalidFields = function (data) {
        if (!data)
            return data;
        Object.keys(data).forEach(function (k) {
            if (data[k] == null || data[k] == undefined) {
                delete data[k];
            }
            if (typeof data[k] === 'object') {
                data[k] = Helper.removeInvalidFields(data[k]);
            }
        });
        return data;
    };
    Helper.emptyGuid = '00000000-0000-0000-0000-000000000000';
    return Helper;
}());
exports.default = Helper;
//# sourceMappingURL=helper.js.map